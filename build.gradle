plugins {
    id 'java'
    id 'war'
}

group = 'org.alquama00s'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

tasks.register('prepareServer') {
    def jarFile = new File(file('build/.server'), 'pm.jar')
    if (!jarFile.exists()) {
        def payaraMicroServerUrl = 'https://repo1.maven.org/maven2/fish/payara/extras/payara-micro/6.2024.10/payara-micro-6.2024.10.jar'
        def folderStructure = file("build/.server")
        if (!folderStructure.exists()) {
            folderStructure.mkdirs()
        }
        println("Downloading payara micro server.....")
        new URL(payaraMicroServerUrl).withInputStream { inputStream ->
            jarFile.withOutputStream { outputStream ->
                outputStream << inputStream
            }
        }
        println("Downloaded payara micro server")
    } else {
        println("payara micro server exists")
    }
}

tasks.register('payaraRun', JavaExec) {
    dependsOn war, prepareServer
    classpath = files('build/.server/pm.jar')
    args = [ "--deploy", "build/libs/blog.war"]
}


war {
    archiveFileName = 'blog.war'
}

dependencies {
    implementation 'jakarta.platform:jakarta.jakartaee-api:10.0.0'

    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
}